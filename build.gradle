import jdk.internal.jimage.ImageStream

plugins {
    id("io.micronaut.application") version "1.2.0"
    id("org.sonarqube") version "3.0"
}

version = "0.1"
group = "mx.com.ga.cosmonaut.reportes"

repositories {
    mavenLocal()
    maven{
        url "https://nexus.wintermute.network/nexus/repository/libs-release/"
    }
    maven{
        url "https://nexus.wintermute.network/nexus/repository/libs-snapshot/"
    }
    mavenCentral()
    jcenter()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("mx.com.ga.cosmonaut.nomina.*")
    }
}

dependencies {
    annotationProcessor ('org.projectlombok:lombok:1.18.16')
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'


    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation group: 'org.json', name: 'json', version: '20210307'

    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.1.0'

    compile(group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.16.0')
    compile(group: 'net.sf.jasperreports', name: 'jasperreports-fonts', version: '6.16.0')
    compile(group: 'org.apache.poi', name: 'poi', version: '4.1.2')
    compile(group: 'org.apache.commons', name: 'commons-lang3', version: '3.9')

    implementation("io.micronaut:micronaut-management")
    implementation group: 'io.micronaut.kubernetes', name: 'micronaut-kubernetes-discovery-client', version: '2.1.0'

    compileOnly ('org.projectlombok:lombok:1.18.16')
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:2.3.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    testRuntimeOnly("org.testcontainers:postgresql")
    testCompileOnly ('org.projectlombok:lombok:1.18.16')
    testAnnotationProcessor ('org.projectlombok:lombok:1.18.16')
    runtimeOnly("ch.qos.logback:logback-classic")
    runtime("org.postgresql:postgresql")
    runtime("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("mx.com.ga.cosmonaut.common:lib:1.0-SNAPSHOT")
    implementation("mx.com.ga.cosmonaut.orquestador:orquestador:1.0-SNAPSHOT")
}

application {
    mainClass.set("mx.com.ga.cosmonaut.reportes.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs <<
            '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.scm.disabled", "true"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

tasks.withType(com.bmuschko.gradle.docker.tasks.image.DockerBuildImage ){
    images.empty()
    images.add("gcr.io/cosmonaut-299500/cosmonaut/reportes:${project.hasProperty('tag')?tag:'DEV-2021-02-11-01'}")
}

